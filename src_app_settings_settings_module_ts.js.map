{"version":3,"file":"src_app_settings_settings_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACnB/B,iCAAiC;AACjC,8CAA8C;AAC9C,2BAA2B;AAC3B,4DAA4D;AACV;IAQrC,YAAY,SAAZ,YAAY;IAEvB;IAEC,CAAC;IAEF,QAAQ;IAER,CAAC;IACD,eAAe;QACb,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAClD,IAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAE,IAAI,EAC7C;YACE,YAAY,CAAC,OAAO,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;SAC3C;QACD,IAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAE,IAAI,EAC7C;YACE,CAAC,CAAC,YAAY,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC;SACnC;QACD,IAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAE,KAAK,EAC9C;YACE,CAAC,CAAC,YAAY,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;SAClC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAClD,CAAC,CAAC,YAAY,CAAC,UAAU,EAAC,MAAM,CAAC,CAAC;QAClC,IAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAE,IAAI,EAC7C;YACE,YAAY,CAAC,OAAO,CAAC,cAAc,EAAC,KAAK,CAAC,CAAC;SAC5C;aACI,IAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,IAAE,KAAK,EACnD;YACE,YAAY,CAAC,OAAO,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;SAC3C;aACG;YACF,YAAY,CAAC,OAAO,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;SAC3C;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;CACF;;AA1CY,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gKAAmC;;KAEpC,CAAC;GACW,YAAY,CA0CxB;AA1CwB;;;;;;;;;;;;;;;ACZzB,iEAAe,wVAAwV","sources":["./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.ts","./src/app/settings/settings.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","/* eslint-disable prefer-const */\n/* eslint-disable @typescript-eslint/quotes */\n/* eslint-disable eqeqeq */\n/* eslint-disable @angular-eslint/use-lifecycle-interface */\nimport { Component, OnInit } from '@angular/core';\nimport { ToggleChangeEventDetail } from '@ionic/angular';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  constructor() {\n\n   }\n\n  ngOnInit() {\n\n  }\n  ngAfterViewInit(): void {\n    let m = document.getElementById('appThemeSwitch');\n    if(localStorage.getItem('appThemeMode')==null)\n    {\n      localStorage.setItem('appThemeMode','md');\n    }\n    if(localStorage.getItem('appThemeMode')==\"md\")\n    {\n      m.setAttribute('checked','false');\n    }\n    if(localStorage.getItem('appThemeMode')==\"ios\")\n    {\n      m.setAttribute('checked','true');\n    }\n  }\n\n  themeToggle(){\n    let m = document.getElementById('appThemeSwitch');\n    m.setAttribute('disabled','true');\n    if(localStorage.getItem('appThemeMode')==\"md\")\n    {\n      localStorage.setItem('appThemeMode','ios');\n    }\n    else if(localStorage.getItem('appThemeMode')==\"ios\")\n    {\n      localStorage.setItem('appThemeMode','md');\n    }\n    else{\n      localStorage.setItem('appThemeMode','md');\n    }\n    console.log('yes');\n    window.location.reload();\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-icon slot=\\\"start\\\" name=\\\"logo-apple\\\"></ion-icon>\\n    <ion-label>IOS Theme</ion-label>\\n    <ion-toggle (click)=\\\"themeToggle()\\\" id=\\\"appThemeSwitch\\\"></ion-toggle>\\n  </ion-item>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}